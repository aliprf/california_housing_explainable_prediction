name: GKE Deploy Workflow

on:
  push:
    branches:
      - master  # Run on pushes to master branch

env:
  PROJECT_ID: your-gcp-project-id           # Your GCP project ID
  REGION: us-central1                       # Artifact Registry and GKE region
  REPO_NAME: your-artifact-repo             # Artifact Registry repository name
  IMAGE_NAME: california-housing-app        # Docker image name
  CLUSTER_NAME: your-gke-cluster             # GKE cluster name
  DEPLOYMENT_NAME: your-k8s-deployment       # Kubernetes Deployment name
  NAMESPACE: default                          # Kubernetes namespace

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 1: Set up Google Cloud CLI using the latest stable setup-gcloud action (@v2)
    # Uses the service account JSON key stored in GitHub Secrets as GCLOUD_KEY_JSON
    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCLOUD_KEY_JSON }}
        project_id: ${{ env.PROJECT_ID }}

    # Step 2: Configure Docker authentication to Artifact Registry
    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker "${REGION}-docker.pkg.dev"

    # Step 3: Build Docker image
    - name: Build Docker image
      run: |
        docker build -t "${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}:latest" .

    # Step 4: Push Docker image to Artifact Registry
    - name: Push Docker image
      run: |
        docker push "${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}:latest"

    # Step 5: Get GKE credentials for kubectl to use
    - name: Get GKE Credentials
      run: |
        gcloud container clusters get-credentials "$CLUSTER_NAME" --region "$REGION" --project "$PROJECT_ID"

    # Step 6: Deploy or upgrade the Helm chart (assumes you have a Helm chart in ./helm_chart)
    - name: Deploy Helm chart to GKE
      run: |
        helm upgrade --install "${DEPLOYMENT_NAME}" ./helm_chart \
          --namespace "${NAMESPACE}" \
          --set image.repository="${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}" \
          --set image.tag="latest"

    # Step 7: Wait for deployment rollout to complete
    - name: Wait for rollout
      run: |
        kubectl rollout status deployment/"${DEPLOYMENT_NAME}" -n "${NAMESPACE}"

    # Step 8: Print all services in the namespace to verify deployment
    - name: Print GKE Services
      run: |
        kubectl get services -n "${NAMESPACE}"
