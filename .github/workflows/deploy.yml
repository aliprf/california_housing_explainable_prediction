name: Deploy to GKE

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # These environment variables can come from your GitHub secrets or workflow inputs
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
      REPO_NAME: ${{ secrets.GCP_REPOSITORY_NAME }}
      IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
      DEPLOYMENT_NAME: ${{ secrets.K8S_DEPLOYMENT_NAME }}
      NAMESPACE: ${{ secrets.K8S_NAMESPACE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Authenticate to GCP using service account key JSON stored in GitHub secrets
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_KEY_JSON }}

      # Set GCP project
      - name: Configure gcloud project
        run: |
          gcloud config set project $PROJECT_ID

      # Configure Docker to use Artifact Registry authentication
      - name: Configure Docker authentication for Artifact Registry
        run: |
          gcloud auth configure-docker $REGION-docker.pkg.dev

      # Build the Docker image and tag it for Artifact Registry
      - name: Build Docker image
        run: |
          IMAGE_URI="$REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:latest"
          docker build -t $IMAGE_URI .
          echo "Built image $IMAGE_URI"

      # Push Docker image to Artifact Registry
      - name: Push Docker image
        run: |
          IMAGE_URI="$REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:latest"
          docker push $IMAGE_URI
          echo "Pushed image $IMAGE_URI"

      # Get GKE credentials to interact with the cluster
      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials $CLUSTER_NAME --region $REGION --project $PROJECT_ID

      # Deploy the image to the GKE cluster using kubectl (or helm)
      - name: Deploy to GKE
        run: |
          IMAGE_URI="$REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:latest"
          kubectl set image deployment/$DEPLOYMENT_NAME $DEPLOYMENT_NAME=$IMAGE_URI -n $NAMESPACE
          kubectl rollout status deployment/$DEPLOYMENT_NAME -n $NAMESPACE

      # Optional: Show service info to verify deployment
      - name: Show service info
        run: |
          kubectl get svc -n $NAMESPACE
