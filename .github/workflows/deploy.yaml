# .github/workflows/deploy.yml

name: Deploy to GKE

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Build and Deploy to GKE
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: personal-projects-462220-id
      REGION: us-central1
      REPO_NAME: california-housing-explain-ai
      IMAGE_NAME: california-housing-api
      CLUSTER_NAME: ml-gke-cluster-1
      DEPLOYMENT_NAME: housing-api
      NAMESPACE: default

    steps:    
    # 1. Checkout code
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Decode and write service account key from base64
    - name: Decode and write service account key
      run: |
        echo "${{ secrets.GCLOUD_KEY_JSON_B64 }}" | base64 -d > gcloud-key.json

    # 3. Authenticate with Google Cloud using decoded credentials
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GCLOUD_KEY_JSON_B64 }}'

    # 4. Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: '>= 464.0.0'

    # 4.5 Install gke-gcloud-auth-plugin
    - name: Install gke-gcloud-auth-plugin
      run: |
        sudo apt-get update
        sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

    # 5. Configure Docker to use gcloud credentials
    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

    # 6. Build Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

    # 7. Push image to Artifact Registry
    - name: Push Docker image
      run: |
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    # 8. Get GKE credentials
    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} \
          --region ${{ env.REGION }} \
          --project ${{ env.PROJECT_ID }}

    # 9. Deploy using Helm
    - name: Deploy with Helm
      run: |
        helm upgrade --install ${{ env.DEPLOYMENT_NAME }} ./helm_chart \
          --namespace ${{ env.NAMESPACE }} \
          --create-namespace \
          --set image.repository=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }} \
          --set image.tag=${{ github.sha }}

    # 10. Print the service info
    - name: Show deployed service
      run: |
        kubectl get svc -n ${{ env.NAMESPACE }}
