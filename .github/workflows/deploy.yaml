name: Build and Deploy to GKE

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID_SECRET: "PROJECT_ID"
      REGION_SECRET: "REGION"
      REPO_NAME_SECRET: "REPO_NAME"
      IMAGE_NAME_SECRET: "IMAGE_NAME"
      CLUSTER_NAME_SECRET: "CLUSTER_NAME"
      DEPLOYMENT_NAME_SECRET: "DEPLOYMENT_NAME"
      NAMESPACE_SECRET: "NAMESPACE"

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: '>= 464.0.0'

    - name: Decode service account key
      run: |
        echo "${{ secrets.GCLOUD_KEY_JSON_B64 }}" | base64 -d > helm_chart/key-file.json

    - name: Authenticate with GCP
      id: auth
      run: |
        gcloud auth activate-service-account --key-file=helm_chart/key-file.json

        # Fetch secrets once and export as env variables
        export PROJECT_ID=$(gcloud secrets versions access latest --secret="${PROJECT_ID_SECRET}" --project="${{ secrets.INFRA_SECRETS_PROJECT }})
        export REGION=$(gcloud secrets versions access latest --secret="${REGION_SECRET}" --project="${{ secrets.INFRA_SECRETS_PROJECT }})
        export REPO_NAME=$(gcloud secrets versions access latest --secret="${REPO_NAME_SECRET}" --project="${{ secrets.INFRA_SECRETS_PROJECT }})
        export IMAGE_NAME=$(gcloud secrets versions access latest --secret="${IMAGE_NAME_SECRET}" --project="${{ secrets.INFRA_SECRETS_PROJECT }})
        export CLUSTER_NAME=$(gcloud secrets versions access latest --secret="${CLUSTER_NAME_SECRET}" --project="${{ secrets.INFRA_SECRETS_PROJECT }})
        export DEPLOYMENT_NAME=$(gcloud secrets versions access latest --secret="${DEPLOYMENT_NAME_SECRET}" --project="${{ secrets.INFRA_SECRETS_PROJECT }})
        export NAMESPACE=$(gcloud secrets versions access latest --secret="${NAMESPACE_SECRET}" --project="${{ secrets.INFRA_SECRETS_PROJECT }})

        echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV
        echo "REGION=$REGION" >> $GITHUB_ENV
        echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
        echo "CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_ENV
        echo "DEPLOYMENT_NAME=$DEPLOYMENT_NAME" >> $GITHUB_ENV
        echo "NAMESPACE=$NAMESPACE" >> $GITHUB_ENV

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker "${REGION}-docker.pkg.dev"

    - name: Build and push Docker image
      run: |
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        GIT_SHA=$(git rev-parse --short HEAD)
        TAG="${TIMESTAMP}-${GIT_SHA}"

        FULL_IMAGE="${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}:${TAG}"

        echo "üî® Building image: $FULL_IMAGE"
        docker build -t "$FULL_IMAGE" .

        echo "üì¶ Pushing image: $FULL_IMAGE"
        docker push "$FULL_IMAGE"

        echo "IMAGE_REPO=${FULL_IMAGE%:*}" >> $GITHUB_ENV
        echo "IMAGE_TAG=${FULL_IMAGE##*:}" >> $GITHUB_ENV

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials "$CLUSTER_NAME" \
          --region "$REGION" \
          --project "$PROJECT_ID"

    - name: Install Helm
      uses: azure/setup-helm@v3

    - name: Deploy using Helm
      run: |
        helm upgrade --install "$DEPLOYMENT_NAME" ./helm_chart \
          --namespace "$NAMESPACE" \
          --create-namespace \
          --set image.repository="${{ env.IMAGE_REPO }}" \
          --set image.tag="${{ env.IMAGE_TAG }}"

    - name: Show Kubernetes Service info
      run: |
        echo "üîç Kubernetes Service Info:"
        kubectl get svc -n "${NAMESPACE}" "${DEPLOYMENT_NAME}" -o wide
